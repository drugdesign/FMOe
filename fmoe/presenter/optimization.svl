#set title 'fmoe:optimization';

/*
Optimization presenter
======================

Optimize atoms with several methods. 

*/

function Initialize_selection;
function GetH; 
function update_config_for_optH;
function update_config_for_optSolv;
function update_config_for_optLH;
function ExecMM;


global function optH []
/*
Optimize hydrogens.

Usage
-----
- Push FMOE Prep/Opt/OptH

This function is equivalent to 

1. Select/All
2. Constrain/Free
3. Select/Hydrogens
4. Select/Invert
5. Constrain/Fix
6. Minimize


Example
-------

::

    svl> optH []

::

    MM [
        pot_finalize   : 0
    ,   pot_charge     : 0
    ,   keep_chirality : ''
    ,   sd_maxit       : 100
    ,   sd_gtest       : 1000
    ,   cg_maxit       : 100
    ,   cg_gtest       : 100
    ,   optimizeOH     : 1
    ,   maxit          : 500
    ,   gtest          : 0.1
    ,   maxstep        : 1
    ,   maxstep_x      : 5
    ,   msg_prefix     : ''
    ,   aRigidBody     : 0
    ,   rigidHOH       : 0
    ,   rigidOH        : 0
    ,   aInert         : 0
    ,   aFixed         : 1...
    ,   aTether        : []
    ,   tetherWeight   : 0
    ,   careful        : 1000
    ,   private        : 0
    ,   verbose        : 1
    ];
    MM: started Fri Jul 30 07:46:38 2021
    MM: forcefield: Amber10:EHT (/Applications/ccg/moe_2019.0102/lib/Amber10EHT.ff.g
    z)
    MM: total charge: -6.150083
    MM:[     0]  E: -3.87043e+004  grad: 8.8798e-001  rmsd:   0.000
    ..
    MM:[    14]  E: -3.87260e+004  grad: 1.7340e-001  rmsd:   0.002
    MM:[    15]  E: -3.87261e+004  grad: 8.9610e-002  rmsd:   0.002
    MM: energy evaluations : 285

*/
    local aFixed_vector;
    local weight_vector;
    update_config_for_optH [];
    aFixed_vector = aFixed _Atoms['$$all'];
    weight_vector = 0;
    ExecMM [aFixed_vector, weight_vector];
endfunction

global function optSolv [tether_weight]
    local aFixed_vector;
    local weight_vector;
    update_config_for_optSolv [];
    aFixed_vector = aFixed _Atoms['$$all'];
    weight_vector = aSelected _Atoms['$$all'] * tether_weight;
    ExecMM [aFixed_vector, weight_vector];
endfunction

global function optLH [tether_weight]
    local aFixed_vector;
    local weight_vector;
    update_config_for_optLH [];
    aFixed_vector = aFixed _Atoms['$$all'];
    weight_vector = aSelected _Atoms['$$all'] * tether_weight;
    ExecMM [aFixed_vector, weight_vector];
endfunction






